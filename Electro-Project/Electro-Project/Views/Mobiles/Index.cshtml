@using Electro_Project.Models.Enums.Mobile
@using Electro_Project.Models.Enums
@model IEnumerable<Electro_Project.Models.Mobile>

@{
    ViewData["Title"] = "Index";
    List<String> OS = (List<String>)ViewBag.OS;
    List<String> Color = (List<String>)ViewBag.Color;
    List<String> Ram = (List<String>)ViewBag.Ram;
}


<div class="row">
    <div class="col-md-12 text-center ">
        <a asp-action="Create" class="form-control" style="margin:30px">Create New <i class="fa fa-plus"></i></a>
    </div>
</div>

<form asp-action="Filter">
    <div id="aside" class="col-md-3">
        <button type="submit" class="form-control"><i class="fa fa-filter"></i> Filter</button>
        <!-- Price Range -->
        <div class="aside">
            <h3 class="aside-title">Price</h3>
            <div class="price-filter">
                <div id="price-slider" class="noUi-target noUi-ltr noUi-horizontal">
                    <div class="noUi-base">
                    </div>
                </div>
                <div class="input-number price-min">
                    <input id="price-min" name="pricemin" type="number" value="@(ViewBag.Min ?? 0.0)">
                    <span class="qty-up">+</span>
                    <span class="qty-down">-</span>
                </div>
                <span>-</span>
                <div class="input-number price-max">
                    <input id="price-max" name="pricemax" type="number" value="@(ViewBag.Max ?? 9999.0)">
                    <span class="qty-up">+</span>
                    <span class="qty-down">-</span>
                </div>
            </div>
        </div>
        <!-- /Price Range  -->
        <!-- RAMTYPE -->
        <div class="aside">
            <h3 class="aside-title">Ram Type</h3>
            @foreach (var name in Enum.GetNames(typeof(MobileRam)))
            {
                <div class="checkbox-filter">
                    <div class="input-checkbox">
                        <input type="checkbox" id="@name" name="Ram" value=@name value=@name checked=@(Ram!=null? Ram.Contains(@name) : false)>
                        <label for="@name">
                            <span></span>
                            @name
                        </label>
                    </div>
                </div>
            }
        </div>
        <!-- /RAMTYPE -->
        <!-- Color -->

        <div class="aside">
            <h3 class="aside-title">Color</h3>
            @foreach (var name in Enum.GetNames(typeof(Color)))
            {
                <div class="checkbox-filter">
                    <div class="input-checkbox">
                        <input type="checkbox" id="@name" name="Color" value=@name checked=@(Color!=null? Color.Contains(@name) : false)>
                        <label for="@name">
                            <span></span>
                            @name
                        </label>
                    </div>
                </div>
            }
        </div>
        <!-- /Color -->
        <!-- SCREEN -->
        <div class="aside">
            <h3 class="aside-title">Laptop Screen</h3>
            @foreach (var name in Enum.GetNames(typeof(MobileOS)))
            {
                <div class="checkbox-filter">
                    <div class="input-checkbox">
                        <input type="checkbox" id="@name" name="OS" value=@name value=@name checked=@(OS!=null? OS.Contains(@name) : false)>
                        <label for="@name">
                            <span></span>
                            @name
                        </label>
                    </div>
                </div>
            }
        </div>
        <!-- /SCREEN -->
        <!-- /aside Widget -->

    </div>
    <div class="col-md-9">
        <!-- store top filter -->
        <div class="store-filter clearfix">
            <div class="store-sort">
                <label>
                    Sort By:
                    <select class="input-select" name="Sort" onchange="this.form.submit()">
                        <option value="Choose Sorting" disabled selected>Choose Sorting</option>
                        <option value="Low Price to High">Low Price to High</option>
                        <option value="High Price to Low">High Price to Low</option>
                        <option value="Popularity">Popularity</option>
                    </select>

                </label>

                <label>
                    Show:
                    <select class="input-select">
                        <option value="0">20</option>
                        <option value="1">50</option>
                    </select>
                </label>
            </div>
            <ul class="store-grid">
                <li class="active"><i class="fa fa-th"></i></li>
                <li><a href="#"><i class="fa fa-th-list"></i></a></li>
            </ul>

        </div>
    </div>
</form>

<!-- /store top filter -->
<!-- store products -->
<div id="store" class="col-md-9">
    <div class="row">
        @foreach (var item in @Model)
        {
            @await Html.PartialAsync("~/Views/Partials/_Product.cshtml", item)
        }
    </div>
    <!-- /product -->


</div>
<!-- /store products -->
<!-- store bottom filter -->
<div class="store-filter clearfix">
    <span class="store-qty">Showing 20-100 products</span>
    <ul class="store-pagination">
        <li class="active">1</li>
        <li><a href="#">2</a></li>
        <li><a href="#">3</a></li>
        <li><a href="#">4</a></li>
        <li><a href="#"><i class="fa fa-angle-right"></i></a></li>
    </ul>
</div>
<!-- /store bottom filter -->
